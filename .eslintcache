[{"C:\\Users\\USBmi\\Desktop\\webshop-mm\\src\\index.js":"1","C:\\Users\\USBmi\\Desktop\\webshop-mm\\src\\App.js":"2","C:\\Users\\USBmi\\Desktop\\webshop-mm\\src\\components\\Products\\Products.jsx":"3","C:\\Users\\USBmi\\Desktop\\webshop-mm\\src\\components\\Product\\Product.jsx":"4","C:\\Users\\USBmi\\Desktop\\webshop-mm\\src\\components\\Product\\styles.js":"5","C:\\Users\\USBmi\\Desktop\\webshop-mm\\src\\components\\Navbar\\Navbar.jsx":"6","C:\\Users\\USBmi\\Desktop\\webshop-mm\\src\\components\\index.js":"7","C:\\Users\\USBmi\\Desktop\\webshop-mm\\src\\components\\Navbar\\styles.js":"8","C:\\Users\\USBmi\\Desktop\\webshop-mm\\src\\components\\Products\\styles.js":"9","C:\\Users\\USBmi\\Desktop\\webshop-mm\\src\\Library\\commerce.js":"10","C:\\Users\\USBmi\\Desktop\\webshop-mm\\src\\components\\Cart\\Cart.jsx":"11","C:\\Users\\USBmi\\Desktop\\webshop-mm\\src\\components\\Cart\\style.js":"12","C:\\Users\\USBmi\\Desktop\\webshop-mm\\src\\components\\Cart\\CartItem\\CartItem.jsx":"13","C:\\Users\\USBmi\\Desktop\\webshop-mm\\src\\components\\Cart\\CartItem\\styles.js":"14","C:\\Users\\USBmi\\Desktop\\webshop-mm\\src\\components\\CheckoutForm\\Checkout\\Checkout.jsx":"15","C:\\Users\\USBmi\\Desktop\\webshop-mm\\src\\components\\CheckoutForm\\Checkout\\styles.js":"16","C:\\Users\\USBmi\\Desktop\\webshop-mm\\src\\components\\CheckoutForm\\AddressForm.jsx":"17","C:\\Users\\USBmi\\Desktop\\webshop-mm\\src\\components\\CheckoutForm\\PaymentForm.jsx":"18","C:\\Users\\USBmi\\Desktop\\webshop-mm\\src\\components\\CheckoutForm\\CustomTextField.jsx":"19","C:\\Users\\USBmi\\Desktop\\webshop-mm\\src\\components\\CheckoutForm\\Review.jsx":"20"},{"size":151,"mtime":1608981548051,"results":"21","hashOfConfig":"22"},{"size":2949,"mtime":1609358214390,"results":"23","hashOfConfig":"22"},{"size":695,"mtime":1608992384214,"results":"24","hashOfConfig":"22"},{"size":1335,"mtime":1609360159521,"results":"25","hashOfConfig":"22"},{"size":406,"mtime":1608983892767,"results":"26","hashOfConfig":"22"},{"size":1487,"mtime":1609323836499,"results":"27","hashOfConfig":"22"},{"size":244,"mtime":1609327116964,"results":"28","hashOfConfig":"22"},{"size":1631,"mtime":1608986528144,"results":"29","hashOfConfig":"22"},{"size":298,"mtime":1608987972486,"results":"30","hashOfConfig":"22"},{"size":127,"mtime":1608989232111,"results":"31","hashOfConfig":"22"},{"size":1903,"mtime":1609326383630,"results":"32","hashOfConfig":"22"},{"size":651,"mtime":1609318017979,"results":"33","hashOfConfig":"22"},{"size":1326,"mtime":1609325992393,"results":"34","hashOfConfig":"22"},{"size":349,"mtime":1609318923646,"results":"35","hashOfConfig":"22"},{"size":3385,"mtime":1609362031584,"results":"36","hashOfConfig":"22"},{"size":1208,"mtime":1609327009327,"results":"37","hashOfConfig":"22"},{"size":5270,"mtime":1609349963665,"results":"38","hashOfConfig":"22"},{"size":2840,"mtime":1609362046976,"results":"39","hashOfConfig":"22"},{"size":460,"mtime":1609359368676,"results":"40","hashOfConfig":"22"},{"size":1004,"mtime":1609351616706,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1jxb9z",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"C:\\Users\\USBmi\\Desktop\\webshop-mm\\src\\index.js",[],["85","86"],"C:\\Users\\USBmi\\Desktop\\webshop-mm\\src\\App.js",[],"C:\\Users\\USBmi\\Desktop\\webshop-mm\\src\\components\\Products\\Products.jsx",[],"C:\\Users\\USBmi\\Desktop\\webshop-mm\\src\\components\\Product\\Product.jsx",[],"C:\\Users\\USBmi\\Desktop\\webshop-mm\\src\\components\\Product\\styles.js",[],"C:\\Users\\USBmi\\Desktop\\webshop-mm\\src\\components\\Navbar\\Navbar.jsx",["87","88"],"import React from 'react';\r\nimport { AppBar, Toolbar, IconButton, Badge, MenuItem, Menu, Typography } from \"@material-ui/core\";\r\nimport { ShoppingCart } from \"@material-ui/icons\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\n\r\nimport logo from \"../../assets/DeliveryIcon.png\";\r\nimport useStyles from \"./styles\";\r\n\r\nconst Navbar = ({ totalItems }) => {\r\n    const classes = useStyles();\r\n    const location = useLocation();\r\n\r\n    return (\r\n        <>\r\n            <AppBar position=\"fixed\" className={classes.appBar} color=\"inherit\">\r\n                <Toolbar>\r\n                    <Typography component={Link} to=\"/\" variant=\"h6\" className={classes.title} color=\"inherit\">\r\n                        <img src={logo} alt=\"Shop-Name\" height=\"25px\" className={classes.image} />\r\n                        Shop-Name\r\n                    </Typography>\r\n                    <div className={classes.grow} />\r\n                    {location.pathname === \"/\" && (\r\n                    <div className={classes.button}>\r\n                        <IconButton component={Link} to=\"/cart\" aria-label=\"Show cart items\" color=\"inherit\">\r\n                            <Badge badgeContent={totalItems} color=\"secondary\">\r\n                                <ShoppingCart />\r\n                            </Badge>\r\n                        </IconButton>\r\n                    </div> )}\r\n                    \r\n                </Toolbar>\r\n            </AppBar>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","C:\\Users\\USBmi\\Desktop\\webshop-mm\\src\\components\\index.js",[],"C:\\Users\\USBmi\\Desktop\\webshop-mm\\src\\components\\Navbar\\styles.js",[],"C:\\Users\\USBmi\\Desktop\\webshop-mm\\src\\components\\Products\\styles.js",[],"C:\\Users\\USBmi\\Desktop\\webshop-mm\\src\\Library\\commerce.js",[],"C:\\Users\\USBmi\\Desktop\\webshop-mm\\src\\components\\Cart\\Cart.jsx",[],"C:\\Users\\USBmi\\Desktop\\webshop-mm\\src\\components\\Cart\\style.js",[],"C:\\Users\\USBmi\\Desktop\\webshop-mm\\src\\components\\Cart\\CartItem\\CartItem.jsx",[],"C:\\Users\\USBmi\\Desktop\\webshop-mm\\src\\components\\Cart\\CartItem\\styles.js",[],"C:\\Users\\USBmi\\Desktop\\webshop-mm\\src\\components\\CheckoutForm\\Checkout\\Checkout.jsx",[],"C:\\Users\\USBmi\\Desktop\\webshop-mm\\src\\components\\CheckoutForm\\Checkout\\styles.js",[],"C:\\Users\\USBmi\\Desktop\\webshop-mm\\src\\components\\CheckoutForm\\AddressForm.jsx",["89","90"],"import React, { useState, useEffect } from 'react'\r\nimport { InputLabel, Select, MenuItem, Button, Grid, Typography } from \"@material-ui/core\";\r\nimport { useForm, FormProvider } from \"react-hook-form\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { commerce } from \"../../Library/commerce\";\r\n\r\nimport FormInput from \"./CustomTextField\";\r\n\r\nconst AddressForm = ({ checkoutToken, next}) => {\r\n    const [shippingCountries, setShippingCountries] = useState([]);\r\n    const [shippingCountry, setShippingCountry] = useState(\"\");\r\n    const [shippingSubdivisions, setShippingSubdivisions] = useState([]);\r\n    const [shippingSubdivision, setShippingSubdivision] = useState(\"\");\r\n    const [shippingOptions, setShippingOptions] = useState([]);\r\n    const [shippingOption, setShippingOption] = useState(\"\");\r\n    const methods = useForm();\r\n\r\n    const countries = Object.entries(shippingCountries).map(([code, name]) => ({ id: code, label: name}));\r\n    const subdivisions = Object.entries(shippingSubdivisions).map(([code, name]) => ({ id: code, label: name}));\r\n    const options = shippingOptions.map((opt) => ({ id: opt.id, label: `${opt.description} - (${opt.price.formatted_with_symbol})`}));\r\n    \r\n\r\n    const fetchShippingCountries = async (checkoutTokenId) => {\r\n        const { countries } = await commerce.services.localeListShippingCountries(checkoutTokenId);\r\n\r\n        setShippingCountries(countries);\r\n        setShippingCountry(Object.keys(countries)[0]);\r\n    }\r\n\r\n    const fetchSubdivisions = async (countryCode) => {\r\n        const { subdivisions } = await commerce.services.localeListSubdivisions(countryCode);\r\n\r\n        setShippingSubdivisions(subdivisions);\r\n        setShippingSubdivision(Object.keys(subdivisions)[0]);\r\n    }\r\n\r\n    const fetchShippingOptions = async (checkoutTokenId, country, region = null) => {\r\n        const options = await commerce.checkout.getShippingOptions(checkoutTokenId, { country, region});\r\n\r\n        setShippingOptions(options);\r\n        setShippingOption(options[0].id);\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchShippingCountries(checkoutToken.id);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if(shippingCountry) fetchSubdivisions(shippingCountry);\r\n    }, [shippingCountry]);\r\n\r\n    useEffect(() => {\r\n        if(shippingSubdivision) fetchShippingOptions(checkoutToken.id, shippingCountry, shippingSubdivision);\r\n    }, [shippingSubdivision])\r\n\r\n    return (\r\n        <>\r\n            <Typography variant=\"h6\" gutterBottom>Shipping Address</Typography>\r\n            <FormProvider {...methods}>\r\n                <form onSubmit={methods.handleSubmit((data) => next({ ...data, shippingCountry, shippingSubdivision, shippingOption}))}>\r\n                    <Grid container spacing={3}>\r\n                        <FormInput name=\"firstName\" label=\"First name\"/>\r\n                        <FormInput name=\"lastName\" label=\"Last name\"/>\r\n                        <FormInput name=\"address1\" label=\"Address\"/>\r\n                        <FormInput name=\"email\" label=\"Email\"/>\r\n                        <FormInput name=\"city\" label=\"City\"/>\r\n                        <FormInput name=\"zip\" label=\"ZIP / Postal code\"/>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <InputLabel>Shipping Country</InputLabel>\r\n                            <Select value={shippingCountry} fullWidth onChange={(e) => setShippingCountry(e.target.value)}>\r\n                                {countries.map((country => \r\n                                    <MenuItem key={country.id} value={country.id}>{country.label}</MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <InputLabel>Shipping Subdivision</InputLabel>\r\n                            <Select value={shippingSubdivision} fullWidth onChange={(e) => setShippingSubdivision(e.target.value)}>\r\n                                {subdivisions.map((subdivision => \r\n                                    <MenuItem key={subdivision.id} value={subdivision.id}>{subdivision.label}</MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <InputLabel>Shipping Options</InputLabel>\r\n                            <Select value={shippingOption} fullWidth onChange={(e) => setShippingOptions(e.target.value)}>\r\n                                {options.map((option => \r\n                                    <MenuItem key={option.id} value={option.id}>{option.label}</MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <br />\r\n                        <div style={{ display: \"flex\", justifyContent: \"space-between\"}}>\r\n                            <Button component={Link} to=\"/cart\" variant=\"outlined\">Back to Cart</Button>\r\n                            <Button type=\"submit\" variant=\"contained\" color=\"primary\">Next</Button>\r\n                        </div>\r\n                </form>\r\n            </FormProvider>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddressForm\r\n","C:\\Users\\USBmi\\Desktop\\webshop-mm\\src\\components\\CheckoutForm\\PaymentForm.jsx",[],"C:\\Users\\USBmi\\Desktop\\webshop-mm\\src\\components\\CheckoutForm\\CustomTextField.jsx",[],"C:\\Users\\USBmi\\Desktop\\webshop-mm\\src\\components\\CheckoutForm\\Review.jsx",[],{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":2,"column":46,"nodeType":"97","messageId":"98","endLine":2,"endColumn":54},{"ruleId":"95","severity":1,"message":"99","line":2,"column":56,"nodeType":"97","messageId":"98","endLine":2,"endColumn":60},{"ruleId":"100","severity":1,"message":"101","line":46,"column":8,"nodeType":"102","endLine":46,"endColumn":10,"suggestions":"103"},{"ruleId":"100","severity":1,"message":"104","line":54,"column":8,"nodeType":"102","endLine":54,"endColumn":29,"suggestions":"105"},"no-native-reassign",["106"],"no-negated-in-lhs",["107"],"no-unused-vars","'MenuItem' is defined but never used.","Identifier","unusedVar","'Menu' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'checkoutToken.id'. Either include it or remove the dependency array.","ArrayExpression",["108"],"React Hook useEffect has missing dependencies: 'checkoutToken.id' and 'shippingCountry'. Either include them or remove the dependency array.",["109"],"no-global-assign","no-unsafe-negation",{"desc":"110","fix":"111"},{"desc":"112","fix":"113"},"Update the dependencies array to be: [checkoutToken.id]",{"range":"114","text":"115"},"Update the dependencies array to be: [checkoutToken.id, shippingCountry, shippingSubdivision]",{"range":"116","text":"117"},[2120,2122],"[checkoutToken.id]",[2387,2408],"[checkoutToken.id, shippingCountry, shippingSubdivision]"]